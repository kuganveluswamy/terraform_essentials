aws_ec2 kveluswa$ terraform destroy
aws_instance.example: Refreshing state... [id=i-0b28212eb4632bca6]

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.example will be destroyed
  - resource "aws_instance" "example" {
      - ami                                  = "ami-0ce448b1704085256" -> null
      - arn                                  = "arn:aws:ec2:us-west-1:880087580894:instance/i-0b28212eb4632bca6" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "us-west-1c" -> null
      - cpu_core_count                       = 1 -> null
      - cpu_threads_per_core                 = 1 -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-0b28212eb4632bca6" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - monitoring                           = false -> null
      - primary_network_interface_id         = "eni-02b72d1ec62f1e63c" -> null
      - private_dns                          = "ip-172-31-13-86.us-west-1.compute.internal" -> null
      - private_ip                           = "172.31.13.86" -> null
      - public_dns                           = "ec2-54-176-246-64.us-west-1.compute.amazonaws.com" -> null
      - public_ip                            = "54.176.246.64" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [
          - "default",
        ] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-56fa5d0c" -> null
      - tags                                 = {} -> null
      - tags_all                             = {} -> null
      - tenancy                              = "default" -> null
      - vpc_security_group_ids               = [
          - "sg-d80eb493",
        ] -> null

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 1 -> null
          - http_tokens                 = "optional" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 100 -> null
          - tags                  = {} -> null
          - throughput            = 0 -> null
          - volume_id             = "vol-0fab7415c29a1983f" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp2" -> null
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_instance.example: Destroying... [id=i-0b28212eb4632bca6]
aws_instance.example: Still destroying... [id=i-0b28212eb4632bca6, 10s elapsed]
aws_instance.example: Still destroying... [id=i-0b28212eb4632bca6, 20s elapsed]
aws_instance.example: Still destroying... [id=i-0b28212eb4632bca6, 30s elapsed]
aws_instance.example: Still destroying... [id=i-0b28212eb4632bca6, 40s elapsed]
aws_instance.example: Destruction complete after 40s

Destroy complete! Resources: 1 destroyed.